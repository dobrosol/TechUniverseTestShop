@model Domain.Concrete.ProductEntities.Case

@{
    ViewBag.Title = "Добавление нового корпуса";
}

@section Body{

    @using (Html.BeginForm("Edit", "Case", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        @Html.HiddenFor(model => model.Id)

        <div class="row">
            <div class="col-md-offset-1 col-md-5">

                <div class="form-group">
                    @Html.EditorFor(m => m.Name, new { htmlAttributes = new { @placeholder = "Наименование", @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.Name, null, new { @class = "validation-message" })
                </div>

                <div class="form-group">
                    @Html.EditorFor(m => m.Company, new { htmlAttributes = new { @placeholder = "Производитель", @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.Company, null, new { @class = "validation-message" })
                </div>

                <div class="form-group">
                    @Html.EditorFor(m => m.Description, new { htmlAttributes = new { @placeholder = "Описание", @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.Description, null, new { @class = "validation-message" })
                </div>

                <div class="form-group">
                    @Html.EditorFor(m => m.Price, new { htmlAttributes = new { @placeholder = "Цена", @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.Price, null, new { @class = "validation-message" })
                </div>

                <div class="form-group">
                    @Html.EditorFor(m => m.FormFactor, new { htmlAttributes = new { @placeholder = "Форм-фактор материнской платы", @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.FormFactor, null, new { @class = "validation-message" })
                </div>

                <div class="form-group">
                    @Html.EditorFor(m => m.PSU, new { htmlAttributes = new { @placeholder = "Мощность БП", @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.PSU, null, new { @class = "validation-message" })
                </div>

                <div class="row">

                    <div class="col-md-offset-1 col-md-5 remove-filter">
                        <a href="@TempData["returnUrl"]">Вернуться к списку</a>
                    </div>

                    <div class="col-md-offset-2 col-md-4">
                        <input class="btn group-name submit" type="submit" value="Сохранить" />
                    </div>
                </div>
            </div>

            <div class="col-md-offset-1 col-md-5">

                <div>
                    <label>Картинка</label>
                    <input type="file" name="image" />
                </div>

                <div class="image-edit">
                    @if (Model != null)
                    {
                        if (Model.ImageData == null)
                        {
                            @:Нет картинки
                        }
                        else
                        {
                            <img src="@Url.Action("GetImage", "Case", new { Model.Id })" />
                        }
                    }
                </div>
            </div>
        </div>
    }
}